{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\acordian\\\\src\\\\Addnotes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Addingprevious from './Addingprevious';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Addnotes = () => {\n  _s();\n  let [newv, setnew] = useState('');\n  let [note, setNote] = useState([]);\n  const eventChanged = event => {\n    //console.log(event.target.value);\\\n    setnew(event.target.value);\n  };\n  const ButtonClicked = () => {\n    console.log(note);\n    setNote(oldValues => {\n      return [...oldValues, newv];\n    });\n    setnew('');\n  };\n  const deleteFun = id => {\n    note.filter((element, index) => {\n      reurn;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writeNote\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"enterText\",\n        placeholder: \"Write Text here\",\n        onChange: eventChanged,\n        value: newv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plusSign\",\n        onClick: ButtonClicked,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tnotes\",\n      children: note.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Addingprevious, {\n          text: element,\n          id: index,\n          onSelect: deleteFun\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Addnotes, \"oLiU4kcSj69ain+6H6hvGmjihpM=\");\n_c = Addnotes;\nexport default Addnotes;\nvar _c;\n$RefreshReg$(_c, \"Addnotes\");","map":{"version":3,"names":["React","useState","Addingprevious","jsxDEV","_jsxDEV","Fragment","_Fragment","Addnotes","_s","newv","setnew","note","setNote","eventChanged","event","target","value","ButtonClicked","console","log","oldValues","deleteFun","id","filter","element","index","reurn","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","text","onSelect","_c","$RefreshReg$"],"sources":["D:/reacttut/acordian/src/Addnotes.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Addingprevious from './Addingprevious';\r\nconst Addnotes=()=>{\r\n    let [newv,setnew]=useState('');\r\n    let [note,setNote]=useState([]);\r\n\r\nconst eventChanged=(event)=>{\r\n    //console.log(event.target.value);\\\r\n    setnew(event.target.value);\r\n}\r\nconst ButtonClicked=()=>{\r\n    console.log(note)\r\n    setNote((oldValues)=>{\r\n        return([\r\n            ...oldValues,newv\r\n        ])\r\n    })\r\n    setnew('');\r\n}\r\nconst deleteFun=(id)=>{\r\n    note.filter((element,index)=>{\r\n        reurn\r\n    })\r\n}\r\n    return (\r\n        <>\r\n        <div className='writeNote'> \r\n        <textarea className='enterText' placeholder='Write Text here' onChange={eventChanged}\r\n            value={newv}\r\n        />\r\n        <button className='plusSign' onClick={ButtonClicked} >+</button>\r\n        </div>\r\n        <div className='Tnotes'>\r\n        {note.map((element,index)=>{\r\n        return <Addingprevious text={element} key={index} id={index}\r\n            onSelect={deleteFun}\r\n        />\r\n        })}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Addnotes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAAAC,EAAA;EACf,IAAI,CAACC,IAAI,EAACC,MAAM,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAC9B,IAAI,CAACU,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMY,YAAY,GAAEC,KAAK,IAAG;IACxB;IACAJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMC,aAAa,GAACA,CAAA,KAAI;IACpBC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjBC,OAAO,CAAEQ,SAAS,IAAG;MACjB,OAAO,CACH,GAAGA,SAAS,EAACX,IAAI,CACpB;IACL,CAAC,CAAC;IACFC,MAAM,CAAC,EAAE,CAAC;EACd,CAAC;EACD,MAAMW,SAAS,GAAEC,EAAE,IAAG;IAClBX,IAAI,CAACY,MAAM,CAAC,CAACC,OAAO,EAACC,KAAK,KAAG;MACzBC,KAAK;IACT,CAAC,CAAC;EACN,CAAC;EACG,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACAvB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1BvB,OAAA;QAAUwB,SAAS,EAAC,WAAW;QAACC,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAAEjB,YAAa;QACjFG,KAAK,EAAEP;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACF9B,OAAA;QAAQwB,SAAS,EAAC,UAAU;QAACO,OAAO,EAAElB,aAAc;QAAAU,QAAA,EAAE;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACN9B,OAAA;MAAKwB,SAAS,EAAC,QAAQ;MAAAD,QAAA,EACtBhB,IAAI,CAACyB,GAAG,CAAC,CAACZ,OAAO,EAACC,KAAK,KAAG;QAC3B,oBAAOrB,OAAA,CAACF,cAAc;UAACmC,IAAI,EAAEb,OAAQ;UAAaF,EAAE,EAAEG,KAAM;UACxDa,QAAQ,EAAEjB;QAAU,GADmBI,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/C,CAAC;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAA1B,EAAA,CAvCKD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}